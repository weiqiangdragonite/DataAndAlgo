
大话数据结构 - 程杰


Contents


1.数据结构绪论




--------------------------------------------------------------------------------

第1章  数据结构绪论


数据结构是一门研究非数值计算的程序设计问题中的操作对象，以及它们之间的关系和操作等相关问题的
学科。

程序设计 = 数据结构 + 算法

数据:是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号
集合。

数据元素:是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理，也被称为记录。

数据项:一个数据元素可以由若干个数据项组成。数据项是数据不可分割的最小单位。

数据对象:是性质相同的数据元素的集合，是数据的子集。


在现实世界中，不同数据元素之间不是独立的，而是存在特定的关系，我们将这些关系称为结构。
数据结构:是相互之间存在一种或多种特定关系的数据元素的集舍。


数据结构分为逻辑结构和物理结构

逻辑结构:是指数据对象中数据元素之间的相互关系
逻辑结构分为以下四种:
1. 集合结构
集合结构:集合结构中的数据元素除了同属于一个集合外，它们之间没有其他关系。
2. 线性结构
线性结构:统性结构中的数据元素之间是一对一的关系。
3. 树形结构
树形结构:树形结构中的数据元素之间存在一种一对多的层次关系。
4. 图形结构
图形结构:图形结构的数据元素是多对多的关系。

数据的物理结构，也叫做存储结构。
物理结构:是指数据的逻辑结构在计算机中的存储形式。

数据的存储结构应正确反映数据元素之间的逻辑关系，这才是最为关键的，如何存储数据元素之间的
逻辑关系，是实现物理结构的重点和难点。
数据元素的存储结构形式有两种:顺序存储和链式存储。
1. 顺序存储结构
顺序存储结构:是把数据元素存放在地址连续的存储单元里，其数据间的逻辑关系和物理关系是一致的。
2. 链式存储结构
链式存储结构:是把数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。
数据元素的存储关系并不能反映其逻辑关系，因此需要用一个指针存放数据元素的地址，这样通过地址就
可以找到相关联数据元素的位置。

逻辑结构是面向问题的，而物理结构就是面向计算机的，其基本的目标就是将数据及其逻辑关系存储到
计算机的内存中。


数据类型:是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。

在C语言中，按照取值的不同，数据类型可以分为两类;
原子类型:是不可以再分解的基本类型，包括整型、实型、字符型等。
结构类型:由若干个类型组合而成，是可以再分解的。例如，整型数组是由若干整型数据组成的。

抽象是指抽取出事物具有的普遍性的本质。它是抽出问题的特征而忽略非本质的细节，是对具体事物的一个
概括。抽象是一种思考问题的方式，它隐藏了繁杂的细节，只保留实现目标所必需的信息。

抽象数据类型(Abstract Data Type，ADT) : 是指一个数学模型及定义在该模型上的一组操作。
一个抽象数据类型定义了:一个数据对象、数据对象中各数据元素之间的关系及对数据元素的操作。

事实上，抽象数据类型体现了程序设计中问题分解、抽象和信息隐藏的特性。抽象数据类型把实际生活中的
问题分解为多个规模小且容易处理的问题，然后建立一个计算机能处理的数据模型，并把每个功能模块的
实现细节作为一个独立的单元，从而使具体实现过程隐藏起来。


描述抽象数据类型的标准格式:

ADT	抽象数据类型名
Data
	数据元素之间逗得关系的定义
Operation
	操作1
		初始条件
		操作结果描述
	操作2
		......
	操作n
		......
endADT


总结：
+------------------------------------+
|                数据                 |
+------------------------------------+
|               数据对象              |
+-----------------++-----------------+
|     数据元素     ||     数据元素      |
+--------+--------++--------+--------+
| 数据项1 | 数据项2 || 数据项1 | 数据项2 |
+--------+--------++--------+--------+

+-----------+
|  逻辑结构  |
+-----------+
| - 集合结构 |
| - 线性结构 |
| - 树形结构 |
| - 图形结构 |
+-----------+

+--------------+
|    物理结构   |
+--------------+
| - 顺序存储结构 |
| - 链接存储结构 |
+--------------+


--------------------------------------------------------------------------------









